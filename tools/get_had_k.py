import torch


def had_k_str_to_evalable_str(had_str, n):
    evalable_str = []
    had_str = had_str.strip().split()
    assert len(had_str) == n, f"expected {n} lines, got {len(had_str)}"
    evalable_str.append("[")
    for i, line in enumerate(had_str):
        line = line.strip()
        assert len(line) == n
        evalable_str.append("\n\t[")
        for j, ch in enumerate(line):
            if ch == "+":
                evalable_str.append("+1")
            elif ch == "-":
                evalable_str.append("-1")
            else:
                raise ValueError(f"Invalid character: {ch}")
            if j != n - 1:
                evalable_str.append(", ")
        evalable_str.append("]")
        if i != n - 1:
            evalable_str.append(",")
    evalable_str.append("\n]")
    return "".join(evalable_str)


def verify_hadamard(matrix):
    n = matrix.shape[0]
    # matrix = matrix[:n, :n]

    res1 = matrix @ matrix.T / n
    res2 = matrix.T @ matrix / n

    unit_matrix = torch.eye(n)
    assert torch.allclose(res1, unit_matrix)
    assert torch.allclose(res2, unit_matrix)
    return True, "Matrix is a valid Hadamard matrix"


if __name__ == "__main__":
    had_str = """
+-------------------------------------------------------------------
++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--+
+++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--
+-++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+-
+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+
++--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-
+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+
++-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--
+-+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++-
+--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++
++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---+
+++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---
+-++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++--
+--++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++-
+---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++
++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-+++
+++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++
++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-+
+++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+-
+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-+
++-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++-
+-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++++
++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--+++++
+++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++++
++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--+++
+++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--++
++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--+
+++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+--
+-++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+-
+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---+
++--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+---
+-+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+--
+--+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+-
+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-+
++---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++-
+-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+++
++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-++
+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-+
++++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++-
+-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------++
++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------+
+++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+------
+-++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+-----
+--++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+----
+---++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+---
+----++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+--
+-----++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+-
+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-+
++------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+-
+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----+
++-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++----
+-+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++---
+--+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++--
+---+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++-
+----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+++
++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--++
+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--+
++++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++--
+-+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++-
+--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-++
++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-+
+++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+-
+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-+
++-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++-
+-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-++
++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-+
+++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++-
+-++-+-++--+++----+-+------++-+++-+---+--++++++-+-++++---++--+-+--++




    """
    n = 68
    evalable_str = had_k_str_to_evalable_str(had_str, n)
    print(evalable_str)
    print()

    # Verify the Hadamard matrix
    had_mat = torch.FloatTensor(eval(evalable_str))
    is_valid, message = verify_hadamard(had_mat)
    print(f"Verification result: {message}")
